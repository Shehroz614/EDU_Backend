Arguments: 
  /usr/local/bin/node /Users/sarath/.cache/node/corepack/yarn/1.22.19/bin/yarn.js add — dev tsconfig-paths

PATH: 
  /Users/sarath/.rvm/gems/ruby-2.7.4/bin:/Users/sarath/.rvm/gems/ruby-2.7.4@global/bin:/Users/sarath/.rvm/rubies/ruby-2.7.4/bin:/usr/local/bin:/Users/sarath/Library/Android/sdk/emulator:/Users/sarath/Library/Android/sdk/platform-tools:/opt/homebrew/opt/openjdk@11/bin:/opt/homebrew/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Library/Apple/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/sarath/Library/Application Support/JetBrains/Toolbox/scripts:/Users/sarath/.rvm/bin

Yarn version: 
  1.22.19

Node version: 
  16.18.0

Platform: 
  darwin arm64

Trace: 
  TypeError [ERR_UNESCAPED_CHARACTERS]: https://registry.yarnpkg.com/—: Request path contains unescaped characters
      at new NodeError (node:internal/errors:387:5)
      at new ClientRequest (node:_http_client:182:13)
      at Object.request (node:https:357:10)
      at Request.module.exports.Request.start (/Users/sarath/.cache/node/corepack/yarn/1.22.19/lib/cli.js:141452:32)
      at Request.module.exports.Request.end (/Users/sarath/.cache/node/corepack/yarn/1.22.19/lib/cli.js:142211:10)
      at end (/Users/sarath/.cache/node/corepack/yarn/1.22.19/lib/cli.js:141265:14)
      at Immediate.<anonymous> (/Users/sarath/.cache/node/corepack/yarn/1.22.19/lib/cli.js:141279:7)
      at processImmediate (node:internal/timers:466:21)

npm manifest: 
  {
    "name": "ugu-backend",
    "version": "0.0.1",
    "description": "backend for ugu",
    "main": "build/app",
    "config": {
      "live": {
        "s3BucketName": "ugu-lamda-deployment",
        "region": "us-east-1",
        "cloudFormationStackName": "EdugramBackendStack-Live",
        "functionName": "",
        "domain": "berlin.edugram.io",
        "stage": "Latest"
      },
      "dev": {
        "s3BucketName": "ugu-lamda-deployment",
        "region": "us-east-1",
        "cloudFormationStackName": "EdugramBackendStack-Dev",
        "functionName": "",
        "domain": "katowice.edugram.io",
        "stage": "dev"
      }
    },
    "scripts": {
      "test": "mocha --timeout 10000",
      "build": "rm -rf build && tsc",
      "prebuild": "cd ./layers/dependencies/nodejs && npm run build-deps",
      "dev": "npx nodemon",
      "swagger:autogen": "node ./src/doc/swagger.js",
      "create-bucket:dev": "cross-var aws s3 mb s3://$npm_package_config_dev_s3BucketName --region $npm_package_config_dev_region",
      "delete-bucket:dev": "cross-var aws s3 rb s3://$npm_package_config_dev_s3BucketName --region $npm_package_config_dev_region",
      "package:dev": "cross-var aws cloudformation package --template ./sam-template.yaml --s3-bucket $npm_package_config_dev_s3BucketName --output-template sam-template.dev.packaged.yaml --region $npm_package_config_dev_region",
      "deploy:dev": "cross-var aws cloudformation deploy --template-file sam-template.dev.packaged.yaml --stack-name $npm_package_config_dev_cloudFormationStackName --capabilities CAPABILITY_IAM --region $npm_package_config_dev_region --parameter-overrides IsProduction=false Stage=$npm_package_config_dev_stage DomainName=$npm_package_config_dev_domain",
      "package-deploy:dev": "npm run build && npm run package:dev && npm run deploy:dev",
      "delete-stack:dev": "cross-var aws cloudformation delete-stack --stack-name $npm_package_config_dev_cloudFormationStackName --region $npm_package_config_dev_region",
      "setup:dev": "npm install && (cross-var aws s3api get-bucket-location --bucket $npm_package_config_dev_s3BucketName --region $npm_package_config_dev_region || npm run create-bucket:dev) && npm run package-deploy:dev",
      "create-bucket:live": "cross-var aws s3 mb s3://$npm_package_config_live_s3BucketName --region $npm_package_config_live_region",
      "delete-bucket:live": "cross-var aws s3 rb s3://$npm_package_config_live_s3BucketName --region $npm_package_config_live_region",
      "package:live": "cross-var aws cloudformation package --template ./sam-template.yaml --s3-bucket $npm_package_config_live_s3BucketName --output-template sam-template.live.packaged.yaml --region $npm_package_config_live_region",
      "deploy:live": "cross-var aws cloudformation deploy --template-file sam-template.live.packaged.yaml --stack-name $npm_package_config_live_cloudFormationStackName --capabilities CAPABILITY_IAM --region $npm_package_config_live_region --parameter-overrides IsProduction=true DomainName=$npm_package_config_live_domain",
      "package-deploy:live": "npm run build && npm run package:live && npm run deploy:live",
      "delete-stack:live": "cross-var aws cloudformation delete-stack --stack-name $npm_package_config_live_cloudFormationStackName --region $npm_package_config_live_region",
      "setup:live": "npm install && (cross-var aws s3api get-bucket-location --bucket $npm_package_config_live_s3BucketName --region $npm_package_config_live_region || npm run create-bucket:live) && npm run package-deploy:live"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/UGU-Academy/backend.git"
    },
    "author": "Sarath 'Delta' Singh",
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/UGU-Academy/backend/issues"
    },
    "homepage": "https://github.com/UGU-Academy/backend#readme",
    "dependencies": {
      "@vendia/serverless-express": "^4.10.3",
      "body-parser": "^1.19.0",
      "cors": "^2.8.5",
      "cuid": "^2.1.8",
      "express": "^4.17.1",
      "firebase-admin": "^9.4.1",
      "mongoose": "^7.0.2",
      "morgan": "^1.10.0",
      "node-fetch": "^2.6.7",
      "oci-common": "^2.59.0",
      "oci-objectstorage": "^2.53.1",
      "request-ip": "^2.1.3",
      "stripe": "^11.8.0",
      "swagger-ui-express": "^4.6.0",
      "uuid": "^8.3.2",
      "validator": "^13.1.17"
    },
    "devDependencies": {
      "@aws-sdk/client-secrets-manager": "^3.327.0",
      "@types/cors": "^2.8.13",
      "@types/express": "^4.17.17",
      "@types/morgan": "^1.9.4",
      "@types/node": "^18.14.6",
      "@types/swagger-ui-express": "^4.1.3",
      "aws-sdk": "^2.834.0",
      "chai": "^4.2.0",
      "chai-http": "^4.3.0",
      "claudia": "^5.14.1",
      "cross-var": "^1.1.0",
      "mocha": "^8.2.1",
      "modclean": "^3.0.0-beta.1",
      "mongoose-dummy": "^1.0.8",
      "node-notifier": "^10.0.1",
      "node-prune": "^1.0.2",
      "nodemon": "^2.0.21",
      "swagger-autogen": "^2.23.0",
      "typescript": "^4.9.5"
    }
  }

yarn manifest: 
  No manifest

Lockfile: 
  No lockfile
