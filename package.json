{
  "name": "ugu-backend",
  "version": "0.0.1",
  "description": "backend for ugu",
  "main": "build/app",
  "config": {
    "live": {
      "s3BucketName": "ugu-lamda-deployment",
      "region": "us-east-1",
      "cloudFormationStackName": "EdugramBackendStack-Live",
      "functionName": "",
      "domain": "berlin.edugram.io",
      "stage": "Latest"
    },
    "dev": {
      "s3BucketName": "ugu-lamda-deployment",
      "region": "us-east-1",
      "cloudFormationStackName": "EdugramBackendStack-Dev",
      "functionName": "",
      "domain": "katowice.edugram.io",
      "stage": "dev"
    }
  },
  "scripts": {
    "test": "mocha --timeout 10000",
    "build": "rm -rf build && tsc && tsc-alias && cp -r ./src/assets ./build/assets && mkdir ./build/doc && cp ./src/doc/swagger.json ./build/doc/swagger.json",
    "prebuild": "cd ./layers/dependencies/nodejs && npm run build-deps",
    "dev": "npx nodemon",
    "swagger:autogen": "npx ts-node ./src/doc/swagger.ts",
    "create-bucket:dev": "cross-var aws s3 mb s3://$npm_package_config_dev_s3BucketName --region $npm_package_config_dev_region",
    "delete-bucket:dev": "cross-var aws s3 rb s3://$npm_package_config_dev_s3BucketName --region $npm_package_config_dev_region",
    "package:dev": "cross-var aws cloudformation package --template ./sam-template.yaml --s3-bucket $npm_package_config_dev_s3BucketName --output-template sam-template.dev.packaged.yaml --region $npm_package_config_dev_region",
    "deploy:dev": "cross-var aws cloudformation deploy --template-file sam-template.dev.packaged.yaml --stack-name $npm_package_config_dev_cloudFormationStackName --capabilities CAPABILITY_IAM --region $npm_package_config_dev_region --parameter-overrides IsProduction=false Stage=$npm_package_config_dev_stage DomainName=$npm_package_config_dev_domain",
    "package-deploy:dev": "npm run build && npm run package:dev && npm run deploy:dev",
    "delete-stack:dev": "cross-var aws cloudformation delete-stack --stack-name $npm_package_config_dev_cloudFormationStackName --region $npm_package_config_dev_region",
    "setup:dev": "npm install && (cross-var aws s3api get-bucket-location --bucket $npm_package_config_dev_s3BucketName --region $npm_package_config_dev_region || npm run create-bucket:dev) && npm run package-deploy:dev",
    "create-bucket:live": "cross-var aws s3 mb s3://$npm_package_config_live_s3BucketName --region $npm_package_config_live_region",
    "delete-bucket:live": "cross-var aws s3 rb s3://$npm_package_config_live_s3BucketName --region $npm_package_config_live_region",
    "package:live": "cross-var aws cloudformation package --template ./sam-template.yaml --s3-bucket $npm_package_config_live_s3BucketName --output-template sam-template.live.packaged.yaml --region $npm_package_config_live_region",
    "deploy:live": "cross-var aws cloudformation deploy --template-file sam-template.live.packaged.yaml --stack-name $npm_package_config_live_cloudFormationStackName --capabilities CAPABILITY_IAM --region $npm_package_config_live_region --parameter-overrides IsProduction=true DomainName=$npm_package_config_live_domain",
    "package-deploy:live": "npm run build && npm run package:live && npm run deploy:live",
    "delete-stack:live": "cross-var aws cloudformation delete-stack --stack-name $npm_package_config_live_cloudFormationStackName --region $npm_package_config_live_region",
    "setup:live": "npm install && (cross-var aws s3api get-bucket-location --bucket $npm_package_config_live_s3BucketName --region $npm_package_config_live_region || npm run create-bucket:live) && npm run package-deploy:live",
    "prepare": "husky install"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/UGU-Academy/backend.git"
  },
  "author": "Sarath 'Delta' Singh",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/UGU-Academy/backend/issues"
  },
  "homepage": "https://github.com/UGU-Academy/backend#readme",
  "dependencies": {
    "@sendgrid/mail": "^7.7.0",
    "@vendia/serverless-express": "^4.10.3",
    "accesscontrol": "^2.2.1",
    "body-parser": "^1.19.0",
    "cors": "^2.8.5",
    "dayjs": "^1.11.9",
    "express": "^4.17.1",
    "express-rate-limit": "^6.7.0",
    "firebase-admin": "^9.4.1",
    "mongoose": "^7.0.2",
    "morgan": "^1.10.0",
    "multer": "^1.4.5-lts.1",
    "node-fetch": "^2.6.7",
    "oci-common": "^2.59.0",
    "oci-mediaservices": "^2.61.0",
    "oci-objectstorage": "^2.53.1",
    "pdfkit": "^0.13.0",
    "request-ip": "^2.1.3",
    "sharp": "^0.32.4",
    "stripe": "12.11.0",
    "ts-node": "^10.9.1",
    "uuid": "^8.3.2"
  },
  "devDependencies": {
    "@aws-sdk/client-secrets-manager": "^3.327.0",
    "@types/cors": "^2.8.13",
    "@types/express": "^4.17.17",
    "@types/morgan": "^1.9.4",
    "@types/multer": "^1.4.7",
    "@types/node": "^18.14.6",
    "@types/swagger-ui-express": "^4.1.3",
    "@types/uuid": "^9.0.2",
    "@typescript-eslint/eslint-plugin": "^5.59.7",
    "@typescript-eslint/parser": "^5.59.7",
    "aws-sdk": "^2.834.0",
    "chai": "^4.2.0",
    "chai-http": "^4.3.0",
    "claudia": "^5.14.1",
    "cross-var": "^1.1.0",
    "eslint": "^8.41.0",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-config-prettier": "^8.8.0",
    "eslint-plugin-import": "^2.27.5",
    "eslint-plugin-prettier": "^4.2.1",
    "husky": "^8.0.0",
    "mocha": "^8.2.1",
    "modclean": "^3.0.0-beta.1",
    "mongoose-dummy": "^1.0.8",
    "node-notifier": "^10.0.1",
    "node-prune": "^1.0.2",
    "nodemon": "^2.0.21",
    "prettier": "^2.8.8",
    "swagger-autogen": "^2.23.0",
    "tsc-alias": "^1.8.6",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^4.9.5"
  }
}
